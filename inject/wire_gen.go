// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package inject

import (
	chat2 "mini/external/receiver/chat"
	"mini/external/receiver/demo"
	"mini/inject/applied"
	"mini/internal/processor/version/implement/chat"
	"mini/internal/processor/version/implement/version"
)

// Injectors from wire.go:

func BuildInjector() (*Injects, error) {
	procedure := version.NewDemoProcedure()
	receiver := demo.ProvideReceiver(procedure)
	engine := applied.InitGrpcServer()
	database := applied.InitDatabaseConnection()
	cache := applied.InitCacheConnection()
	chatProcedure := chat.NewChatProcedure()
	chatReceiver := chat2.ProvideReceiver(chatProcedure)
	llm := applied.InitLLMConnection()
	injects := &Injects{
		Receiver:     receiver,
		GrpcServer:   engine,
		Database:     database,
		Redis:        cache,
		ChatReceiver: chatReceiver,
		LLM:          llm,
	}
	return injects, nil
}
